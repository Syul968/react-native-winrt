# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'windows-2019'

steps:

- task: NuGetToolInstaller@1

- task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
  inputs:
    command: 'restore'
    restoreSolution: 'rnwinrt\rnwinrt.sln'
    feedsToUse: 'config'
    nugetConfigPath: ''

- task: VSBuild@1
  displayName: 'Build solution rnwinrt.sln'
  inputs:
    solution: rnwinrt\rnwinrt.sln
    vsVersion: 'latest'
    platform: 'x64'
    configuration: 'Release'

- script: echo $(Build.SourcesDirectory)
  displayName: 'test'

- task: EsrpCodeSigning@1
  displayName: 'ESRP CodeSigning'
  inputs:
    ConnectedServiceName: 'Xlang Code Signing'
    FolderPath: '$(Build.SourcesDirectory)\rnwinrt\x64\Release'
    Pattern: 'rnwinrt.exe'
    UseMinimatch: true
    signConfigType: 'inlineSignParams'
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

- task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
  inputs:
    command: 'pack'
    packagesToPack: 'rnwinrt/nuget/Microsoft.Windows.JsWinRT.nuspec'
    configuration: 'Release'
    packDestination: '$(Build.BinariesDirectory)\rnwinrt\x64\Release'
    versioningScheme: 'off'
    buildProperties: 'jswinrt_nuget_version=$(NugetVersion);rnwinrt_exe=$(Build.BinariesDirectory)\rnwinrt\x64\Release\rnwinrt.exe;'